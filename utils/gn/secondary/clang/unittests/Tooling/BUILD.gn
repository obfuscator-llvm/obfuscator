import("//llvm/utils/unittest/unittest.gni")

unittest("ToolingTests") {
  configs += [ "//llvm/utils/gn/build:clang_code" ]
  include_dirs = [ "." ]
  deps = [
    "//clang/lib/AST",
    "//clang/lib/ASTMatchers",
    "//clang/lib/Basic",
    "//clang/lib/Format",
    "//clang/lib/Frontend",
    "//clang/lib/Lex",
    "//clang/lib/Rewrite",
    "//clang/lib/Tooling",
    "//clang/lib/Tooling/Core",
    "//clang/lib/Tooling/Refactoring",
    "//llvm/lib/Support",
    "//llvm/lib/Target:TargetsToBuild",
  ]
  sources = [
    "ASTSelectionTest.cpp",
    "CastExprTest.cpp",
    "CommentHandlerTest.cpp",
    "CompilationDatabaseTest.cpp",
    "DiagnosticsYamlTest.cpp",
    "ExecutionTest.cpp",
    "FixItTest.cpp",
    "HeaderIncludesTest.cpp",
    "LexicallyOrderedRecursiveASTVisitorTest.cpp",
    "LookupTest.cpp",
    "QualTypeNamesTest.cpp",
    "RecursiveASTVisitorTestDeclVisitor.cpp",
    "RecursiveASTVisitorTestPostOrderVisitor.cpp",
    "RecursiveASTVisitorTestTypeLocVisitor.cpp",
    "RecursiveASTVisitorTests/Attr.cpp",
    "RecursiveASTVisitorTests/CXXBoolLiteralExpr.cpp",
    "RecursiveASTVisitorTests/CXXMemberCall.cpp",
    "RecursiveASTVisitorTests/CXXOperatorCallExprTraverser.cpp",
    "RecursiveASTVisitorTests/Class.cpp",
    "RecursiveASTVisitorTests/ConstructExpr.cpp",
    "RecursiveASTVisitorTests/DeclRefExpr.cpp",
    "RecursiveASTVisitorTests/ImplicitCtor.cpp",
    "RecursiveASTVisitorTests/InitListExprPostOrder.cpp",
    "RecursiveASTVisitorTests/InitListExprPostOrderNoQueue.cpp",
    "RecursiveASTVisitorTests/InitListExprPreOrder.cpp",
    "RecursiveASTVisitorTests/InitListExprPreOrderNoQueue.cpp",
    "RecursiveASTVisitorTests/IntegerLiteral.cpp",
    "RecursiveASTVisitorTests/LambdaDefaultCapture.cpp",
    "RecursiveASTVisitorTests/LambdaExpr.cpp",
    "RecursiveASTVisitorTests/NestedNameSpecifiers.cpp",
    "RecursiveASTVisitorTests/ParenExpr.cpp",
    "RecursiveASTVisitorTests/TemplateArgumentLocTraverser.cpp",
    "RecursiveASTVisitorTests/TraversalScope.cpp",
    "RefactoringActionRulesTest.cpp",
    "RefactoringCallbacksTest.cpp",
    "RefactoringTest.cpp",
    "ReplacementsYamlTest.cpp",
    "RewriterTest.cpp",
    "ToolingTest.cpp",
  ]
}
