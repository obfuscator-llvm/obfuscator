# RUN: llc -march=amdgcn -verify-machineinstrs -run-pass si-fold-operands  %s -o - | FileCheck -check-prefix=GCN %s

--- |
  define amdgpu_ps void @omod_inst_flag_nsz_src() {
    unreachable
  }

  define amdgpu_ps void @omod_inst_flag_nsz_result() {
    unreachable
  }

  define amdgpu_ps void @omod_inst_flag_nsz_both() {
    unreachable
  }

...

---

# FIXME: Is it OK to fold omod for this?
# GCN-LABEL: name: omod_inst_flag_nsz_src
# GCN: %0:vgpr_32 = nsz V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 0, implicit $exec
# GCN-NEXT: %1:vgpr_32 = V_MUL_F32_e64 0, %0, 0, 1073741824, 0, 0, implicit $exec
# GCN-NEXT: S_ENDPGM implicit %1
name: omod_inst_flag_nsz_src
tracksRegLiveness: true

body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

  %0:vgpr_32 = nsz V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 0, implicit $exec
  %1:vgpr_32 = V_MUL_F32_e64 0, %0, 0, 1073741824, 0, 0, implicit $exec
  S_ENDPGM implicit %1

...
---

# GCN-LABEL: name: omod_inst_flag_nsz_result
# GCN: %0:vgpr_32 = V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 1, implicit $exec
# GCN-NEXT: S_ENDPGM implicit %0

name: omod_inst_flag_nsz_result
tracksRegLiveness: true

body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

  %0:vgpr_32 = V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 0, implicit $exec
  %1:vgpr_32 = nsz V_MUL_F32_e64 0, %0, 0, 1073741824, 0, 0, implicit $exec
  S_ENDPGM implicit %1
...

---

# GCN-LABEL: name: omod_inst_flag_nsz_both
# GCN: %0:vgpr_32 = nsz V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 1, implicit $exec
# GCN-NEXT: S_ENDPGM implicit %0

name: omod_inst_flag_nsz_both
tracksRegLiveness: true

body:             |
  bb.0:
    liveins: $vgpr0, $vgpr1

  %0:vgpr_32 = nsz V_ADD_F32_e64 0, $vgpr0, 0, $vgpr1, 0, 0, implicit $exec
  %1:vgpr_32 = nsz V_MUL_F32_e64 0, %0, 0, 1073741824, 0, 0, implicit $exec
  S_ENDPGM implicit %1
...
