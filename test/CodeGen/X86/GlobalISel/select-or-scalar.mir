# RUN: llc -mtriple=x86_64-linux-gnu                                  -global-isel -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s --check-prefix=ALL

--- |
  define i8 @test_or_i8(i8 %arg1, i8 %arg2) {
    %ret = or i8 %arg1, %arg2
    ret i8 %ret
  }

  define i16 @test_or_i16(i16 %arg1, i16 %arg2) {
    %ret = or i16 %arg1, %arg2
    ret i16 %ret
  }

  define i32 @test_or_i32(i32 %arg1, i32 %arg2) {
    %ret = or i32 %arg1, %arg2
    ret i32 %ret
  }

  define i64 @test_or_i64(i64 %arg1, i64 %arg2) {
    %ret = or i64 %arg1, %arg2
    ret i64 %ret
  }

...
---
name:            test_or_i8
# ALL-LABEL: name:  test_or_i8
alignment:       4
legalized:       true
regBankSelected: true
# ALL:      registers:
# ALL-NEXT:   - { id: 0, class: gr8, preferred-register: '' }
# ALL-NEXT:   - { id: 1, class: gr8, preferred-register: '' }
# ALL-NEXT:   - { id: 2, class: gr8, preferred-register: '' }
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
liveins:
fixedStack:
stack:
constants:
# ALL:          %0 = COPY %dil
# ALL-NEXT:     %1 = COPY %sil
# ALL-NEXT:     %2 = OR8rr %0, %1, implicit-def %eflags
# ALL-NEXT:     %al = COPY %2
# ALL-NEXT:     RET 0, implicit %al
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi

    %0(s8) = COPY %edi
    %1(s8) = COPY %esi
    %2(s8) = G_OR %0, %1
    %al = COPY %2(s8)
    RET 0, implicit %al

...
---
name:            test_or_i16
# ALL-LABEL: name:  test_or_i16
alignment:       4
legalized:       true
regBankSelected: true
# ALL:      registers:
# ALL-NEXT:   - { id: 0, class: gr16, preferred-register: '' }
# ALL-NEXT:   - { id: 1, class: gr16, preferred-register: '' }
# ALL-NEXT:   - { id: 2, class: gr16, preferred-register: '' }
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
liveins:
fixedStack:
stack:
constants:
# ALL:          %0 = COPY %di
# ALL-NEXT:     %1 = COPY %si
# ALL-NEXT:     %2 = OR16rr %0, %1, implicit-def %eflags
# ALL-NEXT:     %ax = COPY %2
# ALL-NEXT:     RET 0, implicit %ax
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi

    %0(s16) = COPY %edi
    %1(s16) = COPY %esi
    %2(s16) = G_OR %0, %1
    %ax = COPY %2(s16)
    RET 0, implicit %ax

...
---
name:            test_or_i32
# ALL-LABEL: name:  test_or_i32
alignment:       4
legalized:       true
regBankSelected: true
# ALL:      registers:
# ALL-NEXT:   - { id: 0, class: gr32, preferred-register: '' }
# ALL-NEXT:   - { id: 1, class: gr32, preferred-register: '' }
# ALL-NEXT:   - { id: 2, class: gr32, preferred-register: '' }
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
liveins:
fixedStack:
stack:
constants:
# ALL:          %0 = COPY %edi
# ALL-NEXT:     %1 = COPY %esi
# ALL-NEXT:     %2 = OR32rr %0, %1, implicit-def %eflags
# ALL-NEXT:     %eax = COPY %2
# ALL-NEXT:     RET 0, implicit %eax
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi

    %0(s32) = COPY %edi
    %1(s32) = COPY %esi
    %2(s32) = G_OR %0, %1
    %eax = COPY %2(s32)
    RET 0, implicit %eax

...
---
name:            test_or_i64
# ALL-LABEL: name:  test_or_i64
alignment:       4
legalized:       true
regBankSelected: true
# ALL:      registers:
# ALL-NEXT:   - { id: 0, class: gr64, preferred-register: '' }
# ALL-NEXT:   - { id: 1, class: gr64, preferred-register: '' }
# ALL-NEXT:   - { id: 2, class: gr64, preferred-register: '' }
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
liveins:
fixedStack:
stack:
constants:
# ALL:          %0 = COPY %rdi
# ALL-NEXT:     %1 = COPY %rsi
# ALL-NEXT:     %2 = OR64rr %0, %1, implicit-def %eflags
# ALL-NEXT:     %rax = COPY %2
# ALL-NEXT:     RET 0, implicit %rax
body:             |
  bb.1 (%ir-block.0):
    liveins: %rdi, %rsi

    %0(s64) = COPY %rdi
    %1(s64) = COPY %rsi
    %2(s64) = G_OR %0, %1
    %rax = COPY %2(s64)
    RET 0, implicit %rax

...
